<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Vigenere Cipher is a method of encrypting alphabetic text. It uses
a simple form of polyalphabetic substitution. A polyalphabetic
cipher is any cipher based on substitution, using multiple
substitution alphabets .The encryption of the original text is done
using the Vigenère square or Vigenère table.
The table consists of the alphabets written out 26 times in different
rows, each alphabet shifted cyclically to the left compared to the
previous alphabet, corresponding to the 26 possible Caesar Ciphers.
At different points in the encryption process, the cipher uses a
different alphabet from one of the rows.
The alphabet used at each point depends on a repeating keyword.

Example:</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4wgSDiUhOGD66gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAElSURBVEhL
        vdW5SkQxGIbhg0sl4lKIeiXCtFpaiLvegDeoteO+oYKCd6Li/r7FDyFwmuQcP3iKmeL7mSSTNBUZwzLO
        cIIBOovlq7jHFz7hkHlUx/I13MLiX3zjBouoyjjWcYUPWP6DZzh0FMWxfAsXeEeUP2ITEyiO5Ts4xxti
        We6wjUkUx/JdeFrSctfcoVMojuV7OMUrovwSfj+N4rSVuwf7mEFxYlnycvfA8lkUZwRunGuelvu5utws
        4BCxoXrBAarLjQOO0NsAl8jj19sSmThB/zKk7SRVHdNI2y/p5I8WSYekV8U1qq+KiEN6u+wiDsmva4c8
        YANV13XEIfmD45AnVD84kXgyXZ70yXRoJ2+yyR99f80Qc+gsDlmBp+sYS8jSNH9bzXREfEMC+wAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>